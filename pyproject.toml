[tool.poetry]
name = "reportportal-ai-assistant"
version = "0.1.0"
description = "AI-powered assistant for ReportPortal test analytics"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "reportportal_ai", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
httpx = "^0.24.1"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
chromadb = "^0.4.0"
sentence-transformers = "^2.2.2"
tenacity = "^8.2.0"
structlog = "^24.1.0"
click = "^8.1.0"
rich = "^13.0.0"
tqdm = "^4.66.0"
python-dotenv = "^1.0.0"
openai = "^1.12.0"
anthropic = "^0.18.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^24.0.0"
ruff = "^0.1.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

[tool.poetry.scripts]
reportportal_ai = "reportportal_ai.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/examples/*"]